<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ToPage</name>
    </assembly>
    <members>
        <member name="T:ToPage.EnumerableExtensions">
            <summary>
            Provides extension methods for <see cref="T:System.Collections.Generic.IEnumerable`1"/> objects.
            </summary>
        </member>
        <member name="M:ToPage.EnumerableExtensions.ToPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:ToPage.Page`1"/> from the enumerable.
            </summary>
            <typeparam name="T">The enumerable's item type.</typeparam>
            <param name="values">Enumerable to build the page from.</param>
            <param name="pageNumber">The 1-based page number to get.</param>
            <param name="itemsPerPage">The number of items on the page.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="values"/> or  is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="pageNumber"/> or <paramref name="itemsPerPage"/> is less than 1.
            </exception>
            <returns>The specified page from the enumerable.</returns>
        </member>
        <member name="T:ToPage.IPage">
            <summary>
            The base interface for a page. Contains a page number.
            </summary>
        </member>
        <member name="P:ToPage.IPage.PageNumber">
            <summary>
            The 1-based page number for this page.
            </summary>
        </member>
        <member name="T:ToPage.IPage`1">
            <summary>
            A page with generic page items.
            </summary>
            <typeparam name="T">Type of the items on the page.</typeparam>
        </member>
        <member name="P:ToPage.IPage`1.Items">
            <summary>
            The items on this page.
            </summary>
        </member>
        <member name="T:ToPage.IPageWithCounts">
            <summary>
            A page with an item count and a page count.
            </summary>
        </member>
        <member name="P:ToPage.IPageWithCounts.ItemCount">
            <summary>
            Total number of items in the collection this page is from.
            </summary>
        </member>
        <member name="P:ToPage.IPageWithCounts.PageCount">
            <summary>
            Total number of pages in the collection this page is from.
            </summary>
        </member>
        <member name="T:ToPage.IPageWithCounts`1">
            <summary>
            A page with generic page items, an item count, and a page count.
            </summary>
            <typeparam name="T">Type of the items on the page.</typeparam>
        </member>
        <member name="T:ToPage.Page`1">
            <summary>
            A page with generic page items.
            </summary>
            <typeparam name="T">Type of the items on the page.</typeparam>
        </member>
        <member name="P:ToPage.Page`1.Items">
            <inheritdoc/>
        </member>
        <member name="P:ToPage.Page`1.PageNumber">
            <inheritdoc/>
        </member>
        <member name="M:ToPage.Page`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            Initializes a <see cref="T:ToPage.Page`1"/> with items and a page number.
            </summary>
            <param name="items">The items on the page.</param>
            <param name="pageNumber">The 1-based page number.</param>
        </member>
        <member name="T:ToPage.Page">
            <summary>
            Provides static methods relating to <see cref="T:ToPage.IPage"/> objects.
            </summary>
        </member>
        <member name="M:ToPage.Page.Empty``1">
            <summary>
            Creates an empty <see cref="T:ToPage.Page`1"/>.
            </summary>
            <typeparam name="T">Type of the items on the page.</typeparam>
            <returns>An empty <see cref="T:ToPage.Page`1"/>.</returns>
        </member>
        <member name="M:ToPage.Page.EmptyWithCounts``1">
            <summary>
            Creates an empty <see cref="T:ToPage.PageWithCounts`1"/>.
            </summary>
            <typeparam name="T">Type of the items on the page.</typeparam>
            <returns>An empty <see cref="T:ToPage.PageWithCounts`1"/>.</returns>
        </member>
        <member name="T:ToPage.PageWithCounts`1">
            <summary>
            A page with generic page items, an item count, and a page count.
            </summary>
            <typeparam name="T">Type of the items on the page.</typeparam>
        </member>
        <member name="P:ToPage.PageWithCounts`1.Items">
            <inheritdoc/>
        </member>
        <member name="P:ToPage.PageWithCounts`1.PageNumber">
            <inheritdoc/>
        </member>
        <member name="P:ToPage.PageWithCounts`1.ItemCount">
            <inheritdoc/>
        </member>
        <member name="P:ToPage.PageWithCounts`1.PageCount">
            <inheritdoc/>
        </member>
        <member name="M:ToPage.PageWithCounts`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a <see cref="T:ToPage.PageWithCounts`1"/> with items, a page number, an item count, and a page count.
            </summary>
            <param name="items">The items on the page.</param>
            <param name="pageNumber">The 1-based page number.</param>
            <param name="itemCount">Total number of items in the collection this page is from.</param>
            <param name="pageCount">Total number of pages in the collection this page is from.</param>
        </member>
        <member name="T:ToPage.QueryableExtensions">
            <summary>
            Provides extension methods for <see cref="T:System.Linq.IOrderedQueryable`1"/> objects.
            </summary>
        </member>
        <member name="M:ToPage.QueryableExtensions.ToPage``1(System.Linq.IOrderedQueryable{``0},System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:ToPage.Page`1"/> from the query.
            </summary>
            <typeparam name="T">The query's item type.</typeparam>
            <param name="query">Query to build the page from.</param>
            <param name="pageNumber">The 1-based page number to get.</param>
            <param name="itemsPerPage">The number of items on the page.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="query"/> or  is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="pageNumber"/> or <paramref name="itemsPerPage"/> is less than 1.
            </exception>
            <returns>The specified page from the query.</returns>
        </member>
        <member name="M:ToPage.QueryableExtensions.ToPage``1(System.Linq.IOrderedQueryable{``0},System.Int32,System.Int32,System.Func{System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Creates a <see cref="T:ToPage.Page`1"/> from the query.
            </summary>
            <typeparam name="T">The query's item type.</typeparam>
            <param name="query">Query to build the page from.</param>
            <param name="pageNumber">The 1-based page number to get.</param>
            <param name="itemsPerPage">The number of items on the page.</param>
            <param name="itemsEnumerator">The function to use for enumerating the page items from the query.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when <paramref name="query"/> or <paramref name="itemsEnumerator"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when <paramref name="pageNumber"/> or <paramref name="itemsPerPage"/> is less than 1.
            </exception>
            <returns>The specified page from the query.</returns>
        </member>
    </members>
</doc>
